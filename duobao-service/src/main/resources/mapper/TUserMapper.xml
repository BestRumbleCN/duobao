<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="team.wuxie.crowdfunding.mapper.TUserMapper">
  <resultMap id="BaseResultMap" type="team.wuxie.crowdfunding.domain.TUser">
    <!--
      WARNING - @mbggenerated
    -->
    <constructor>
      <idArg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
      <arg column="username" jdbcType="VARCHAR" javaType="java.lang.String"/>
      <arg column="password" jdbcType="VARCHAR" javaType="java.lang.String"/>
      <arg column="spread_id" jdbcType="VARCHAR" javaType="java.lang.String"/>
      <arg column="nickname" jdbcType="VARCHAR" javaType="java.lang.String"/>
      <arg column="avatar" jdbcType="VARCHAR" javaType="java.lang.String"/>
      <arg column="coin" jdbcType="DECIMAL" javaType="java.math.BigDecimal"/>
      <arg column="integral" jdbcType="INTEGER" javaType="java.lang.Integer"/>
      <arg column="cellphone" jdbcType="VARCHAR" javaType="java.lang.String"/>
      <arg column="wx_id" jdbcType="VARCHAR" javaType="java.lang.String"/>
      <arg column="wb_id" jdbcType="VARCHAR" javaType="java.lang.String"/>
      <arg column="qq_id" jdbcType="VARCHAR" javaType="java.lang.String"/>
      <arg column="user_status" jdbcType="BIT" javaType="java.lang.Boolean"/>
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
      <arg column="invitor" jdbcType="VARCHAR" javaType="java.lang.String"/>
      <arg column="qq" jdbcType="VARCHAR" javaType="java.lang.String"/>
    </constructor>
  </resultMap>

  <resultMap id="UserVO" type="team.wuxie.crowdfunding.vo.UserVO">
    <result column="user_id" property="userId" jdbcType="INTEGER" javaType="java.lang.Integer"/>
    <result column="username" property="username" jdbcType="VARCHAR" javaType="java.lang.String"/>
    <result column="spread_id" property="spreadId" jdbcType="VARCHAR" javaType="java.lang.String"/>
    <result column="nickname" property="nickname" jdbcType="VARCHAR" javaType="java.lang.String"/>
    <result column="avatar" property="avatar" jdbcType="VARCHAR" javaType="java.lang.String"/>
    <result column="coin" property="coin" jdbcType="DECIMAL" javaType="java.math.BigDecimal"/>
    <result column="integral" property="integral" jdbcType="INTEGER" javaType="java.lang.Integer"/>
    <result column="cellphone" property="cellphone" jdbcType="VARCHAR" javaType="java.lang.String"/>
    <result column="qq" property="qq" jdbcType="VARCHAR" javaType="java.lang.String"/>
    <result column="invitor" property="invitor" jdbcType="VARCHAR" javaType="java.lang.String"/>
  </resultMap>

  <select id="selectByUsername" resultMap="BaseResultMap" parameterType="java.lang.String">
    SELECT *
    FROM t_user
    WHERE username = #{username,jdbcType=VARCHAR}
  </select>

  <select id="selectIdByUsername" resultType="integer" parameterType="java.lang.String">
    SELECT user_id
    FROM t_user
    WHERE username = #{username,jdbcType=VARCHAR}
  </select>

  <select id="countByUsername" resultType="int" parameterType="java.lang.String">
    SELECT COUNT(1)
    FROM t_user
    WHERE username = #{username,jdbcType=VARCHAR}
  </select>

  <select id="findId2NameMap" resultType="map">
    SELECT user_id, username
    FROM t_user
    WHERE user_id IN
#     todo 待测试
    <foreach collection="userIds" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </select>

  <select id="selectBySpreadId" resultMap="BaseResultMap" parameterType="java.lang.String">
    SELECT *
    FROM t_user
    WHERE spread_id = #{invitor,jdbcType=VARCHAR}
  </select>

  <select id="selectByUserIds" resultMap="BaseResultMap" parameterType="java.util.Set">
    select * from t_user where user_id in
    <foreach collection="collection" item="userId" open="(" close=")" separator=",">
      #{userId}
    </foreach>
  </select>

  <select id="selectAllByQuery" resultMap="BaseResultMap">
    SELECT * from t_user WHERE 1=1
    <if test="query != null">
      <if test="query.userId != null">
        AND user_id = #{query.userId}
      </if>
      <if test="query.username != null and query.username != ''">
        AND username like CONCAT('%',#{query.username},'%')
      </if>
      <if test="query.userStatus != null">
        AND user_status = #{query.userStatus}
      </if>
    </if>
  </select>

  <update id="updatePassword">
    UPDATE t_user
    SET password = #{password,jdbcType=VARCHAR}
    WHERE user_id = #{userId,jdbcType=INTEGER}
  </update>

  <update id="updateAvatar">
    UPDATE t_user
    SET avatar = #{avatar,jdbcType=VARCHAR}
    WHERE user_id = #{userId,jdbcType=INTEGER}
  </update>

  <update id="updateUserStatus">
    UPDATE t_user
    SET user_status = #{userStatus,jdbcType=BIT}
    WHERE user_id = #{userId,jdbcType=INTEGER}
  </update>

  <update id="updateIntegral">
    UPDATE t_user
    SET integral = integral + #{amount,jdbcType=INTEGER}
    WHERE user_id = #{userId,jdbcType=INTEGER}
          AND integral + #{amount,jdbcType=INTEGER} >= 0
  </update>

  <update id="updateCoin">
    UPDATE t_user
    SET coin = coin + #{amount,jdbcType=INTEGER}
    WHERE user_id = #{userId,jdbcType=INTEGER}
          AND coin + #{amount,jdbcType=INTEGER} >= 0
  </update>


  <!--UserVO相关-->
  <select id="selectByUserId" resultMap="UserVO" parameterType="java.lang.Integer">
    SELECT
      user_id,
      username,
      spread_id,
      nickname,
      avatar,
      coin,
      integral,
      cellphone,
      qq
    FROM t_user
    WHERE user_id = #{userId,jdbcType=INTEGER}
  </select>

  <!--UserVO相关-->
  <select id="selectByThirdId" resultMap="BaseResultMap">
    select *
    from t_user where
    <if test="thirdType == 1">
      wx_id = #{thirdId,jdbcType=VARCHAR}
    </if>
    <if test="thirdType == 2">
      wb_id = #{thirdId,jdbcType=VARCHAR}
    </if>
    <if test="thirdType == 3">
      qq_id = #{thirdId,jdbcType=VARCHAR}
    </if>

  </select>

  <!--UsersStatisticsVO相关-->
  <select id="selectByInterval" resultType="team.wuxie.crowdfunding.vo.UsersStatisticsVO"
          parameterType="java.lang.Integer">
    SELECT
      date_format(create_time, '%m') AS month,
      count(1)                       AS count
    FROM t_user
    WHERE TIMESTAMPDIFF(YEAR, NOW(), create_time) = #{interval,jdbcType=INTEGER}
    GROUP BY date_format(create_time, '%m')
  </select>

</mapper>