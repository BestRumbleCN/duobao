<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="team.wuxie.crowdfunding.mapper.TUserMapper">
    <resultMap id="BaseResultMap" type="team.wuxie.crowdfunding.domain.TUser">
        <!--
          WARNING - @mbggenerated
        -->
        <constructor>
            <idArg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="username" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="password" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="spread_id" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="nickname" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="avatar" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="coin" jdbcType="DECIMAL" javaType="java.math.BigDecimal"/>
            <arg column="integral" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="cellphone" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="wx_id" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="wb_id" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="qq_id" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="shipping_address" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="user_status" jdbcType="BIT" javaType="java.lang.Boolean"/>
            <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
        </constructor>
    </resultMap>

    <resultMap id="UserVO" type="team.wuxie.crowdfunding.vo.UserVO">
        <result column="user_id" property="userId" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        <result column="username" property="username" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="spread_id" property="spreadId" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="nickname" property="nickname" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="avatar" property="avatar" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="coin" property="coin" jdbcType="DECIMAL" javaType="java.math.BigDecimal"/>
        <result column="integral" property="integral" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        <result column="cellphone" property="cellphone" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="shipping_address" property="shippingAddress" jdbcType="VARCHAR" javaType="java.lang.String"/>
    </resultMap>

    <select id="selectByUsername" resultMap="BaseResultMap" parameterType="java.lang.String">
        select * from t_user where username = #{username,jdbcType=VARCHAR}
    </select>

    <select id="selectAllLike" resultMap="BaseResultMap">
        SELECT * from t_user
        WHERE user_id like CONCAT('%',#{userId},'%')
        <if test="username != null">
            OR username like CONCAT('%',#{username},'%')
        </if>
    </select>

    <update id="updatePassword">
        UPDATE t_user SET password = #{password,jdbcType=VARCHAR}
        WHERE user_id = #{userId,jdbcType=INTEGER}
    </update>

    <update id="updateAvatar">
        UPDATE t_user SET avatar = #{avatar,jdbcType=VARCHAR}
        WHERE user_id = #{userId,jdbcType=INTEGER}
    </update>

    <update id="updateUserStatus">
        UPDATE t_user SET user_status = #{userStatus,jdbcType=BIT}
        WHERE user_id = #{userId,jdbcType=INTEGER}
    </update>

    <update id="updateIntegral">
        UPDATE t_user SET integral = integral + #{amount,jdbcType=INTEGER}
        WHERE user_id = #{userId,jdbcType=INTEGER}
        AND integral + #{amount,jdbcType=INTEGER} >= 0
    </update>



    <!--UserVO相关-->
    <select id="selectByUserId" resultMap="UserVO" parameterType="java.lang.Integer">
        select
        user_id, username, spread_id, nickname, avatar, coin, integral, cellphone, shipping_address
        from t_user where user_id = #{userId,jdbcType=INTEGER}
    </select>

    <!--UsersStatisticsVO相关-->
    <select id="selectByInterval" resultType="team.wuxie.crowdfunding.vo.UsersStatisticsVO" parameterType="java.lang.Integer">
        select
        date_format(create_time, '%m') as month, count(1) as count
        from t_user
        where TIMESTAMPDIFF(YEAR, NOW(), create_time) = #{interval,jdbcType=INTEGER} group by date_format(create_time, '%m')
    </select>

</mapper>